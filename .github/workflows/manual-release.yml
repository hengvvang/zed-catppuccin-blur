name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: "Version bump type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests semver

      - name: Get current version
        id: version
        run: |
          CURRENT_VERSION=$(grep '^version = ' extension.toml | sed 's/version = "\(.*\)"/\1/')
          if [ "${{ github.event.inputs.version_bump }}" = "patch" ]; then
            NEW_VERSION=$(python -c "import semver; print(str(semver.VersionInfo.parse('${CURRENT_VERSION}').bump_patch()))")
          elif [ "${{ github.event.inputs.version_bump }}" = "minor" ]; then
            NEW_VERSION=$(python -c "import semver; print(str(semver.VersionInfo.parse('${CURRENT_VERSION}').bump_minor()))")
          else
            NEW_VERSION=$(python -c "import semver; print(str(semver.VersionInfo.parse('${CURRENT_VERSION}').bump_major()))")
          fi
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "Current version: ${CURRENT_VERSION}"
          echo "New version: ${NEW_VERSION}"

      - name: Sync theme
        run: python sync_theme.py

      - name: Update extension.toml version
        run: |
          sed -i "s/^version = .*/version = \"${{ steps.version.outputs.new_version }}\"/" extension.toml

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add themes/catppuccin-blur.json extension.toml
          git commit -m "chore: prepare release ${{ steps.version.outputs.new_version }}"

      - name: Create and push tag
        run: |
          git tag v${{ steps.version.outputs.new_version }}
          git push -f origin v${{ steps.version.outputs.new_version }}
          git push

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.version.outputs.new_version }}
          tag_name: v${{ steps.version.outputs.new_version }}
          generate_release_notes: true

      - name: Checkout Zed Extensions Fork
        uses: actions/checkout@v4
        with:
          repository: jenslys/extensions
          path: zed-extensions
          token: ${{ secrets.COMMITTER_TOKEN }}
          submodules: true

      - name: Configure upstream
        run: |
          cd zed-extensions
          git remote add upstream https://github.com/zed-industries/extensions.git
          git fetch upstream
          git reset --hard upstream/main

      - name: Update Extension
        run: |
          cd zed-extensions
          # Update extensions.toml
          if ! grep -q "catppuccin-blur" extensions.toml; then
            echo -e "\n[extensions.catppuccin-blur]\nversion = \"${{ steps.version.outputs.new_version }}\"" >> extensions.toml
          else
            sed -i "/\[extensions.catppuccin-blur\]/,/version/s/version = .*/version = \"${{ steps.version.outputs.new_version }}\"/" extensions.toml
          fi

          # Add/update submodule
          git submodule add -f https://github.com/jenslys/zed-catppuccin-blur.git extensions/catppuccin-blur || true
          cd extensions/catppuccin-blur
          git fetch --all
          git checkout v${{ steps.version.outputs.new_version }}
          cd ../..

          # Commit changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add extensions.toml extensions/catppuccin-blur
          git commit -m "feat: Update catppuccin-blur to v${{ steps.version.outputs.new_version }}"
          git push origin HEAD:update-catppuccin-blur-${{ steps.version.outputs.new_version }} --force

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
        run: |
          cd zed-extensions
          gh pr create \
            --title "feat: Update catppuccin-blur to v${{ steps.version.outputs.new_version }}" \
            --body "Updates catppuccin-blur to version ${{ steps.version.outputs.new_version }}

            - Updated submodule to v${{ steps.version.outputs.new_version }}
            - Updated version in extensions.toml

            Release: https://github.com/jenslys/zed-catppuccin-blur/releases/tag/v${{ steps.version.outputs.new_version }}" \
            --base zed-industries/extensions:main \
            --head jenslys:update-catppuccin-blur-${{ steps.version.outputs.new_version }} \
            --label extension
